local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexware/Orion/main/source')))()

local Window = OrionLib:MakeWindow({Name = "TYPE://SOUL", HidePremium = false, SaveConfig = false, ConfigFolder = "OrionTest"})

local Tab = Window:MakeTab({
	Name = "Main",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})

local Section = Tab:AddSection({
	Name = "Section I"
})

local lp = game.Players.LocalPlayer
 local TweenService = game:GetService("TweenService")
 
 local function getClosestHollow()
    local closestHollow = nil
    local closestDistance = math.huge
    local PlayerPos = lp.Character.HumanoidRootPart.Position
    local foundNPC = false

    for _, entity in ipairs(workspace.Entities:GetChildren()) do
        if entity:IsA("Model") and (entity.Name:sub(1, 8) == "Fishbone" or entity.Name:sub(1, 5) == "Frisk") and entity:FindFirstChild("HumanoidRootPart") then
            local distance = (entity.HumanoidRootPart.Position - PlayerPos).Magnitude
            if distance < closestDistance then
                closestDistance = distance
                closestHollow = entity
                foundNPC = true
                print(closestHollow)
            end
        end
    end

    if not foundNPC then
        print("No NPCs")
    end

    return closestHollow
end
 
local autofarm = false
local dis = 9
local farmmethod = "above"
local zanpakto

Tab:AddToggle({
    Name = "Autofarm",
    Default = false,
    Callback = function(Value)
        autofarm = Value
        while autofarm do
            task.wait()
            pcall(function()
                local NPC = getClosestHollow()
                zanpakto = lp.Character:FindFirstChild("Zanpakuto")
                if zanpakto then
                    game:GetService("Players").LocalPlayer.Character.CharacterHandler.Remotes.Weapon:FireServer()
                end
                while NPC and NPC:FindFirstChild("Humanoid") and NPC.Humanoid.Health > 0 and autofarm do
                    local distance = (NPC.HumanoidRootPart.Position - lp.Character.HumanoidRootPart.Position).Magnitude
                    local newPos

                    if farmmethod == "above" then
                        newPos = NPC.HumanoidRootPart.Position + Vector3.new(0, dis, 0)
                    elseif farmmethod == "underground" then
                        newPos = NPC.HumanoidRootPart.Position - Vector3.new(0, dis, 0)
                    else
                        newPos = NPC.HumanoidRootPart.Position - (NPC.HumanoidRootPart.CFrame.lookVector * dis)
                    end

                    if distance > 20 then
                        local tweenService = game:GetService("TweenService")
                        local tweenInfo = TweenInfo.new(distance/40, Enum.EasingStyle.Linear)
                        local humanoidRootPart = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart
                        local tween = tweenService:Create(humanoidRootPart, tweenInfo, {CFrame = CFrame.new(newPos, NPC.HumanoidRootPart.Position)})
                        tween:Play()
                        tween.Completed:wait(0)
                    else
                        lp.Character.HumanoidRootPart.CFrame = CFrame.new(newPos, NPC.HumanoidRootPart.Position)
                        local args = {
                            [1] = "LightAttack"
                        }
                        game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("ServerCombatHandler"):FireServer(unpack(args))
                    end
                    task.wait()
                    
                    if NPC.Humanoid.Health <= 0 then
                        NPC.HumanoidRootPart:Destroy()
                    end
                    
                    NPC = getClosestHollow()
                end
            end)
        end
    end
})


Tab:AddSlider({
	Name = "Distance",
	Min = 5,
	Max = 19,
	Default = dis,
	Color = Color3.fromRGB(255,255,255),
	Increment = 1,
	ValueName = "",
	Callback = function(Value)
		dis = Value
	end    
})

Tab:AddDropdown({
	Name = "Farm Method",
	Default = selectedmethod,
	Options = {"underground", "above", "behind"},
	Callback = function(Value)
        farmmethod = tostring(Value)
	end    
})

OrionLib:Init()
